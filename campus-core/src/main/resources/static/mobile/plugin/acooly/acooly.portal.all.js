/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/js/acooly.app.js":
/*!******************************!*\
  !*** ./src/js/acooly.app.js ***!
  \******************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/**\n * acooly App相关库封装\n * @type {{}}\n */\n\n(function ($) {\n    var acooly_app = {\n\n        /**\n         * 判断当前浏览器是否移动浏览器\n         */\n        isMobile: function () {\n            var userAgentInfo = navigator.userAgent;\n            var mobileAgents = [\"Android\", \"iPhone\", \"SymbianOS\", \"Windows Phone\", \"iPad\", \"iPod\"];\n            var mobile_flag = false;\n            //根据userAgent判断是否是手机\n            for (var v = 0; v < mobileAgents.length; v++) {\n                if (userAgentInfo.indexOf(mobileAgents[v]) > 0) {\n                    mobile_flag = true;\n                    break;\n                }\n            }\n            var screen_width = window.screen.width;\n            var screen_height = window.screen.height;\n\n            //根据屏幕分辨率判断是否是手机\n            if (screen_width < 500 && screen_height < 800) {\n                mobile_flag = true;\n            }\n            return mobile_flag;\n        },\n\n        /**\n         * 获取当前设备类型\n         * return pc,android,ios,other\n         */\n        getDeviceType: function () {\n\n            if (!this.isMobile()) {\n                return 'pc';\n            }\n\n            var userAgent = navigator.userAgent;\n            var p = navigator.platform;\n            var isAndroid = userAgent.indexOf('Android') > -1 || userAgent.indexOf('Linux') > -1; //android终端或者uc浏览器\n            var isiOS = !!userAgent.match(/\\(i[^;]+;( U;)? CPU.+Mac OS X/); //ios终端\n\n            if (isAndroid == true) {\n                return 'android';\n            }\n\n            if (isiOS == true) {\n                return 'ios';\n            }\n            return 'other';\n        },\n\n        /**\n         * H5与native桥接方法注册\n         * @param callback\n         * @returns {*}\n         */\n        setupNativeToWebBridge: function (callback) {\n            var deviceType = this.getDeviceType();\n            console.info(\"deviceType\", deviceType);\n            if (deviceType == 'ios') {\n                if (window.WKWebViewJavascriptBridge) {\n                    return callback(WKWebViewJavascriptBridge);\n                }\n                if (window.WKWVJBCallbacks) {\n                    return window.WKWVJBCallbacks.push(callback);\n                }\n                window.WKWVJBCallbacks = [callback];\n                window.webkit.messageHandlers.iOS_Native_InjectJavascript.postMessage(null)\n            } else if (deviceType == 'android') {\n                // waiting coding\n            } else {\n                // do nothding\n            }\n        },\n\n        /**\n         * 页面上注册回调事件和方法\n         * @param opts\n         */\n        webCallNative: function (opts) {\n            var defOpts = {\n                element: null,              // 绑定的元素（如按钮）\n                event: null,                // 绑定的事件\n                service: null,              // 服务名称\n                jsonData: null,             // 参数数据\n                onComplete: null            // app返回数据回调\n            }\n            var options = $.extend(defOpts, opts);\n            this.setupNativeToWebBridge(function (bridge) {\n                console.info(\"call app:\" + JSON.stringify(options));\n                $(options.element).on(options.event, function () {\n                    /// H5 ---> APP    H5调用原生\n                    var data = $.extend({'service': options.service}, options.jsonData);\n                    bridge.callHandler('awake', data, function (response) {\n                        if (options.onComplete != null) {\n                            options.onComplete.call(this, response);\n                        }\n                    })\n                })\n            });\n        },\n\n        nativeCallWeb: function (opts) {\n\n        }\n    };\n    $.extend($.acooly, {\n        app: acooly_app\n    });\n})(jQuery);\n\n\n\n//# sourceURL=webpack:///./src/js/acooly.app.js?");

/***/ }),

/***/ "./src/js/acooly.form.js":
/*!*******************************!*\
  !*** ./src/js/acooly.form.js ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var acooly_form = {\n\n    registerFourSplitInput: function (inputId) {\n        $('#' + inputId).on(\"keyup\", function (e) {\n            //只对输入数字时进行处理\n            if ((e.which >= 48 && e.which <= 57) ||\n                (e.which >= 96 && e.which <= 105)) {\n                //获取当前光标的位置\n                var caret = this.selectionStart\n                //获取当前的value\n                var value = this.value\n                //从左边沿到坐标之间的空格数\n                var sp = (value.slice(0, caret).match(/\\s/g) || []).length\n                //去掉所有空格\n                var nospace = value.replace(/\\s/g, '')\n                //重新插入空格\n                var curVal = this.value = nospace.replace(/(\\d{4})/g, \"$1 \").trim()\n                //从左边沿到原坐标之间的空格数\n                var curSp = (curVal.slice(0, caret).match(/\\s/g) || []).length\n                //修正光标位置\n                this.selectionEnd = this.selectionStart = caret + curSp - sp\n            }\n        });\n    }\n\n};\n\n$.extend($.acooly, {\n    form : acooly_form\n})\n\n//# sourceURL=webpack:///./src/js/acooly.form.js?");

/***/ }),

/***/ "./src/js/acooly.format.js":
/*!*********************************!*\
  !*** ./src/js/acooly.format.js ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("(function ($) {\n    var formatClass = {\n\n        /**\n         * 格式化:文件大小\n         *\n         * @Param value\n         *            [必选]字节大小\n         * @Return 根据大小自动判断单位的人类试图大小。\n         */\n        fileSize: function (value) {\n            if (value < 1024) {\n                return value + 'byte';\n            } else if (value >= 1024 && value < 1024 * 1024) {\n                return Math.round(value / 1024 * 100) / 100 + 'K';\n            } else if (value >= 1024 * 1024 && value < 1024 * 1024 * 1024) {\n                return Math.round(value / 1024 / 1024 * 100) / 100 + 'M';\n            } else {\n                return Math.round(value / 1024 / 1024 / 1024 * 100) / 100 + 'G';\n            }\n        },\n\n        /**\n         * 格式化:金额元显示\n         *\n         * @Param num\n         *            [必填]金额\n         * @Param yuan\n         *            [可选]是否元:true(默认),false\n         * @Param symbol\n         *            [可选]货币符号，默认无，可选:￥,$等\n         * @Return 货币金额格式化显示，保留2位小数\n         */\n        money: function (num, yuan, symbol) {\n            if (isNaN(num))\n                num = \"0\";\n            num = num.toString().replace(/\\$|\\,/g, '');\n            if (!yuan)\n                num = num / 100;\n            if (!symbol)\n                symbol = \"\";\n            sign = (num == (num = Math.abs(num)));\n            num = Math.floor(num * 100 + 0.50000000001);\n            cents = num % 100;\n            num = Math.floor(num / 100).toString();\n            if (cents < 10)\n                cents = \"0\" + cents;\n            for (var i = 0; i < Math.floor((num.length - (1 + i)) / 3); i++)\n                num = num.substring(0, num.length - (4 * i + 3)) + ','\n                    + num.substring(num.length - (4 * i + 3));\n            currency = (((sign) ? '' : '-') + num + '.' + cents);\n            return symbol + currency;\n        },\n\n        fenToWan: function (fen, symbol) {\n            var num = fen / 10000;\n            return this.money(num, false, symbol);\n        },\n\n        /**\n         * 格式化日期时间\n         *\n         * @Param d\n         *            日期对象或日期时间字符串（支持GMT）\n         * @Param format\n         *            格式patten(默认：yyyy-MM-dd HH:mm:ss)\n         * @Return 根据format指定格式的字符串\n         */\n        date: function (d, format) {\n            if (!format) {\n                format = 'yyyy-MM-dd HH:mm:ss'\n            }\n            if (typeof (d) == 'string') {\n                d = new Date(d);\n            }\n            return this._dateFormat(d, format);\n        },\n\n        /**\n         * 时长格式化\n         *\n         * 根据秒数，格式化为对应的human格式。如：1天12:12:01\n         *\n         * @Param span\n         *            时长\n         * @Param unit\n         *            时长单位，支持: s:秒(默认)，ms:毫秒\n         * @Return 时长human格式\n         */\n        timespan: function (span, unit) {\n            if (!unit || unit == 's') {\n                // 秒\n                span = span * 1000;\n            }\n            var sm = Math.floor(span % 1000); // 计算毫秒\n            var second = Math.floor(span / 1000 % 60); // 计算秒\n            var minite = Math.floor((span / 1000 / 60) % 60); // 计算分\n            var hour = Math.floor((span / 1000 / 3600) % 24); // 计算小时\n            var hourspan = (hour < 10 ? \"0\" + hour : hour) + \":\"\n                + (minite < 10 ? \"0\" + minite : minite) + \":\"\n                + (second < 10 ? \"0\" + second : second);\n            var day = Math.floor((span / 1000 / 3600 / 24) % 356); // 计算天\n            day = (day > 0 ? day + '天' : '');\n            sm = (sm > 0 ? '.' + sm : '');\n            return day + hourspan + sm;\n        },\n\n        /**\n         * 格式化html文本数据\n         *\n         * 格式化为只显示一部分，点击后面的更多弹出层显示剩余信息\n         *\n         */\n        content: function (html, maxSize) {\n            if (!html || html == '')\n                return '';\n            if (!maxSize)\n                maxSize = 20;\n            if (html.length > maxSize) {\n                temp = html.substring(0, maxSize);\n                html = '<a href=\"javascript:;\" title=\"' + html\n                    + '\" onclick=\"$(this).children().toggle()\">' + temp\n                    + '<span>...</span><span style=\"display:none;\">' + html\n                    + '</span></a>';\n            }\n            return html;\n        },\n\n        /**\n         * 链接格式化\n         */\n        link: function (url, label) {\n            if (!url || url == '')\n                return '';\n            if (!label)\n                label = '查看';\n            var html = '<a href=\"' + url + '\" target=\"_blank\">' + label\n                + '</a>';\n            return html;\n        },\n\n        /**\n         * 简单js模板\n         * formatString功能 使用方法：formatString('字符串{0}字符串{0}字符串{1}','第一个变量','第二个变量');\n         */\n        template: function (str) {\n            for (var i = 0; i < arguments.length - 1; i++) {\n                eval(\"var re = /\\\\{\" + i + \"\\\\}/g;\");\n                str = str.replace(re, arguments[i + 1]);\n            }\n            return str;\n        },\n\n        json: function (json, options) {\n            var reg = null,\n                keyStyle = 'color:#92278f;',\n                valStyle = 'color:#3ab54a;',\n                formatted = '',\n                pad = 0,\n                PADDING = '    '; // one can also use '\\t' or a different number of spaces\n\n\n            // optional settings\n            options = options || {};\n            // remove newline where '{' or '[' follows ':'\n            options.newlineAfterColonIfBeforeBraceOrBracket = (options.newlineAfterColonIfBeforeBraceOrBracket === true) ? true : false;\n            // use a space after a colon\n            options.spaceAfterColon = (options.spaceAfterColon === false) ? false : true;\n\n            // begin formatting...\n            if (typeof json !== 'string') {\n                // make sure we start with the JSON as a string\n                json = JSON.stringify(json);\n            } else {\n                // is already a string, so parse and re-stringify in order to remove extra whitespace\n                json = JSON.parse(json);\n                json = JSON.stringify(json);\n            }\n\n            // add newline before and after curly braces\n            reg = /([\\{\\}])/g;\n            json = json.replace(reg, '\\r\\n$1\\r\\n');\n\n            // add newline before and after square brackets\n            reg = /([\\[\\]])/g;\n            json = json.replace(reg, '\\r\\n$1\\r\\n');\n\n            // add newline after comma\n            reg = /(\\,)/g;\n            json = json.replace(reg, '$1\\r\\n');\n\n            // remove multiple newlines\n            reg = /(\\r\\n\\r\\n)/g;\n            json = json.replace(reg, '\\r\\n');\n\n            // remove newlines before commas\n            reg = /\\r\\n\\,/g;\n            json = json.replace(reg, ',');\n\n            // optional formatting...\n            if (!options.newlineAfterColonIfBeforeBraceOrBracket) {\n                reg = /\\:\\r\\n\\{/g;\n                json = json.replace(reg, ':{');\n                reg = /\\:\\r\\n\\[/g;\n                json = json.replace(reg, ':[');\n            }\n            if (options.spaceAfterColon) {\n                reg = /\\:/g;\n                json = json.replace(reg, ': ');\n            }\n\n            $.each(json.split('\\r\\n'), function (index, node) {\n                var i = 0,\n                    indent = 0,\n                    padding = '';\n\n                if (node.match(/\\{$/) || node.match(/\\[$/)) {\n                    indent = 1;\n                } else if (node.match(/\\}/) || node.match(/\\]/)) {\n                    if (pad !== 0) {\n                        pad -= 1;\n                    }\n                } else {\n                    if (node && node != '') {\n                        var pair = node.split(':')\n                        node = '<span style=\"' + keyStyle + '\">' + pair[0] + '</span>:<span style=\"' + valStyle + '\">' + pair[1] + '</span>';\n                    }\n                    indent = 0;\n                }\n\n                for (i = 0; i < pad; i++) {\n                    padding += PADDING;\n                }\n\n                formatted += padding + node + '\\r\\n';\n                pad += indent;\n            });\n\n            return formatted;\n        },\n\n        /**\n         * 安全mask(建议服务器端处理)\n         */\n        mask: function (value) {\n\n        },\n\n        // *** 私有帮助方法\n\n        /**\n         * 格式化日期对象\n         */\n        _dateFormat: function (dateObject, format) {\n            var o = {\n                \"M+\": dateObject.getMonth() + 1, // month\n                \"d+\": dateObject.getDate(), // day\n                \"H+\": dateObject.getHours(), // hour\n                \"m+\": dateObject.getMinutes(), // minute\n                \"s+\": dateObject.getSeconds(), // second\n                \"q+\": Math.floor((dateObject.getMonth() + 3) / 3), // quarter\n                \"S\": dateObject.getMilliseconds()\n                // millisecond\n            }\n            if (/(y+)/.test(format))\n                format = format.replace(RegExp.$1,\n                    (dateObject.getFullYear() + \"\")\n                        .substr(4 - RegExp.$1.length));\n            for (var k in o)\n                if (new RegExp(\"(\" + k + \")\").test(format))\n                    format = format.replace(RegExp.$1,\n                        RegExp.$1.length == 1 ? o[k] : (\"00\" + o[k])\n                            .substr((\"\" + o[k]).length));\n            return format;\n        }\n\n    };\n\n    $.extend($.acooly, {\n        format: formatClass\n    })\n})(jQuery);\n\n\n//# sourceURL=webpack:///./src/js/acooly.format.js?");

/***/ }),

/***/ "./src/js/acooly.portal.js":
/*!*********************************!*\
  !*** ./src/js/acooly.portal.js ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/**\n *\n * acooly portal js for gfintech\n *\n * @author zhangpu\n * @date 2017-07-09\n * @type {{trimToEmpty: acooly_portal.trimToEmpty, ajax: acooly_portal.ajax, ajaxRender: acooly_portal.ajaxRender, renderData: acooly_portal.renderData}}\n */\nvar acooly_portal = {\n    trimToEmpty: function (text) {\n        if (text == null || text == 'null') return '';\n        return text;\n    },\n\n    ajax: function (url, jsonData, onSuccess, onError) {\n        $.ajax({\n            url: url,\n            method: 'post',\n            data: jsonData,\n            beforeSend: function () {\n                $.acooly.loading();\n            },\n            complete: function () {\n                $.acooly.loaded();\n            },\n            success: function (result) {\n                if (onSuccess) {\n                    onSuccess.call(this, result);\n                } else {\n                    $.acooly.toast(result.message);\n                }\n            },\n            error: function (e) {\n                if (onError) {\n                    onError.call(this, e);\n                } else {\n                    $.acooly.msg(\"通讯异常:\" + e, 2);\n                }\n            }\n        })\n    },\n\n    /**\n     * ajax方式提交表单\n     *\n     * 可根据参数说明传值控制逻辑\n     * 也可以直接传入标准jquery-ajax的参数覆盖封装的逻辑\n     *\n     * @param opts 参考下面的默认值说明\n     */\n    ajaxSubmit: function (opts) {\n\n        var defOpts = {\n            url: null,                      // 地址\n            jsonData: null,                 // json数据，与formId任传其一\n            formId: null,                   // form表单ID，与data任传其一\n            buttonId: null,                 // 提交按钮id\n            buttonDisabledClass: null,       // 提价按钮disableClass\n            onSuccess: null,\n            onFailure: null,\n            onError: null\n        }\n        if (!opts.formId && !opts.jsonData) {\n            $.acooly.toptip(\"formId和jsonData必输其一\", \"error\");\n            return;\n        }\n        opts.data = opts.jsonData;\n        if (!opts.data) {\n            opts.data = $('#' + opts.formId).serializeJson();\n        }\n        var options = $.extend(defOpts, opts);\n        var ajaxOptions = {\n            method: \"post\",\n            cache: false,\n            beforeSend: function () {\n                if (options.buttonId) {\n                    $.acooly.enable(options.buttonId);\n                    $(\"#\" + options.buttonId).html(\"正在加载...\");\n                } else {\n                    $.acooly.loading();\n                }\n            },\n            complete: function () {\n                if (options.buttonId) {\n                    $.acooly.enable(options.buttonId);\n                    $(\"#\" + options.buttonId).html(\"确 定\");\n                } else {\n                    $.acooly.loaded();\n                }\n            },\n            success: function (result) {\n                if (result.success) {\n                    if (options.onSuccess) {\n                        options.onSuccess.call(this, result);\n                    }\n                } else {\n                    if (options.onFailure) {\n                        options.onFailure.call(this, result);\n                    }else{\n                        $.acooly.toptip(result.message, \"error\");\n                    }\n                }\n            },\n            error: function (e) {\n                if (options.onError) {\n                    options.onError.call(this, e);\n                } else {\n                    $.acooly.toptip(\"通讯异常:\" + e, \"error\");\n                }\n            }\n        }\n\n        $.ajax($.extend(ajaxOptions, options));\n\n    },\n\n    ajaxRender: function (url, jsonData, container, template, beforeRender, afterReader) {\n        var This = this;\n        $.ajax({\n            url: url,\n            method: 'post',\n            data: jsonData,\n            beforeSend: function () {\n                $.acooly.loading();\n            },\n            complete: function () {\n                $.acooly.loaded();\n            },\n            success: function (result) {\n                if (result.success) {\n                    if (beforeRender) {\n                        beforeRender.call(this, result);\n                    }\n                    This.renderData(container, template, result);\n                    if (afterReader) {\n                        afterReader.call(this, result);\n                    }\n                } else {\n                    $.acooly.toast(result.message);\n                }\n            },\n            error: function (e) {\n                $.acooly.toast('数据加载失败:' + e);\n            }\n        })\n    },\n\n    renderData: function (container, template, result) {\n        baidu.template.LEFT_DELIMITER = '<%';\n        baidu.template.RIGHT_DELIMITER = '%>';\n        var html = baidu.template(template, result);\n        $('#' + container).html(html);\n        return result.data.totalPage;\n    },\n\n    renderAppend: function (container, template, result) {\n        baidu.template.LEFT_DELIMITER = '<%';\n        baidu.template.RIGHT_DELIMITER = '%>';\n        var html = baidu.template(template, result);\n        $('#' + container).append(html);\n        return result.data.totalPage;\n    },\n\n\n    /**\n     * 分页列表（内容递增方式）\n     *\n     * 列表末尾提供加载更多的按钮，加载后的下一页数据接续在上一页数据后。\n     * @param opts参数说明：\n     * url 请求数据的URL\n     * jsonData 请求参数\n     * template 模板ID\n     * renderContainer 分页列表数据容器\n     * renderController 分页控制容器\n     * beforeRender 数据load后，渲染完成前拦截函数\n     * afterRender  渲染完成后拦截函数\n     */\n    pageAppend: function (opts) {\n\n        var def = {\n            refresh: false,      // 如果true则刷新，显示第一页。\n            entity: null,\n            pageSize: 10,\n            jsonData: {},\n            beforeRender: null,\n            afterRender: null\n        }\n\n        var options = $.extend(def, opts);\n        var pageNo = $('#' + options.renderController).attr(\"pageNo\");\n        if (options.refresh || !pageNo) {\n            pageNo = 1;\n        }\n        var requestData = $.extend({rows: options.pageSize, page: pageNo}, options.jsonData);\n\n        if (options.entity) {\n            options.template = options.entity + \"_list_template\";\n            options.renderController = options.entity + \"_list_controller\";\n            options.renderContainer = options.entity + \"_list_container\";\n        }\n\n\n        baidu.template.ESCAPE = false;\n        $.acooly.portal.ajax(options.url, requestData, function (result) {\n\n            if (options.beforeRender) {\n                options.beforeRender.call(this, result);\n            }\n            if (options.refresh) {\n                $.acooly.portal.renderData(options.renderContainer, options.template, result);\n            } else {\n                $.acooly.portal.renderAppend(options.renderContainer, options.template, result);\n            }\n\n\n            if (result.data.hasNext || result.hasNext) {\n                $('#' + options.renderController).show();\n            } else {\n                $('#' + options.renderController).hide();\n            }\n            pageNo = parseInt(pageNo) + 1;\n            $('#' + options.renderController).attr(\"pageNo\", pageNo);\n\n            if (options.afterRender) {\n                options.afterRender.call(this, result);\n            }\n\n        });\n    },\n\n\n    /**\n     * 刷新图片验证码\n     * @param captchaImage [必填] 验证码图片ID\n     * @param captchaInput [必填] 验证码输入框ID\n     * @param captchaImageUrl [可选] 图片验证码URL地址，默认为acooly框架的/captcha.jpg\n     */\n    catpchaRefresh: function (captchaImage, captchaInput, captchaImageUrl) {\n        if (!captchaImageUrl) {\n            captchaImageUrl = \"/jcaptcha.jpg\";\n        }\n        $('#' + captchaImage).attr(\"src\", captchaImageUrl + \"?\" + new Date());\n        $('#' + captchaInput).val('');\n    },\n\n\n    /**\n     * 发送短信验证码\n     * 参数说明请参考函数内的默认参数\n     * @param opts\n     */\n    catpchaSend: function (opts) {\n        var def = {\n            url: null,                      // [必选] 请求服务端地址\n            sendButtonId: null,             // [必选] 发送按钮ID\n            sendButtonDisableClass: null,   // [可选] 发送按钮disable的样式class\n            jsonData: {},                   // [二选] 与formId必选一，需要手机号码及附属信息\n            formId: null,                   // [二选] 与jsonData必选一，从序列化表单获取信息\n            timeout: 120,                   // [可选] 倒计时秒数，默认120秒\n            onSuccess: null,                // [可选] 成功回调\n            onError: null,                  // [可选] 网络失败回调\n        };\n        var options = $.extend(def, opts);\n        var requestData = options.jsonData;\n        if (options.formId) {\n            requestData = $.extend($('#' + options.formId).serializeJson(), options.jsonData);\n        }\n\n        $.ajax({\n            url: options.url + \"?\" + new Date(),\n            data: requestData,\n            cache: false,\n            method: 'post',\n            beforeSend: function () {\n                $.acooly.loading();\n            },\n            complete: function () {\n                $.acooly.loaded();\n            },\n            success: function (result) {\n                if (result.success) {\n                    $(\"#\" + options.sendButtonId).attr('disabled', true);\n                    $.acooly.countdown.start(options.sendButtonId, options.timeout, options.sendButtonDisableClass)\n                    $.acooly.toptip(result.message, 'success');\n                } else {\n                    $.acooly.toptip(result.message, 'error');\n                }\n                if (options.onSuccess) {\n                    options.onSuccess.call(this, result);\n                }\n            },\n            error: function (e) {\n                if (options.onError) {\n                    options.onError.call(this, e);\n                } else {\n                    console.info(e);\n                    $.acooly.toptip(\"通讯异常:\" + e, 'error');\n                }\n            }\n        });\n\n\n    }\n\n\n};\n\n\n/**\n * 密码相关\n * @type {{}}\n */\nvar acooly_password = {\n\n    options: {\n        higRegex: \"^(?=.{8,})(?=.*[A-Z])(?=.*[a-z])(?=.*[0-9])(?=.*\\\\W).*$\",\n        midRegex: \"^(?=.{8,})(((?=.*[A-Z])(?=.*[a-z]))|((?=.*[A-Z])(?=.*[0-9]))|((?=.*[a-z])(?=.*[0-9]))).*$\",\n        lowRegex: \"(?=.{8,}).*\"\n    },\n\n    /**\n     * 验证码密码等级\n     * @param password 密码\n     * @returns {number} 等级（0：不合格,1:低，2:中，3:高）\n     */\n    verify: function (password) {\n        if (new RegExp(this.options.higRegex, \"g\").test(password)) {\n            return 3;\n        } else if (new RegExp(this.options.midRegex, \"g\").test(password)) {\n            return 2;\n        } else if (new RegExp(this.options.lowRegex, \"g\").test(password)) {\n            return 1;\n        } else {\n            return 0;\n        }\n    }\n};\n\n\nvar acooly_countdown = {\n    // 默认倒计时60s\n    count: 60,\n\n    disabledClass: '',\n\n    /**\n     * 启动\n     * @param count\n     * @param buttonId\n     */\n    start: function (buttonId, count, disabledClass) {\n        if (count) {\n            this.count = count;\n        }\n        if (disabledClass) {\n            this.disabledClass = disabledClass;\n        }\n        this.doCount(buttonId);\n    },\n\n    /**\n     * 停止\n     */\n    stop: function () {\n        this.count = 0;\n    },\n\n    doCount: function (buttonId) {\n        var i = --this.count;\n        if (i < 0) {\n            $(\"#\" + buttonId).prop('disabled', false).removeClass(this.disabledClass);\n            $(\"#\" + buttonId).text(\"重新下发短信\");\n        } else {\n            $(\"#\" + buttonId).prop('disabled', true).addClass(this.disabledClass);\n            $(\"#\" + buttonId).text(\"倒计时\" + i + \"秒\");\n            setTimeout(\"$.acooly.countdown.doCount('\" + buttonId + \"')\", 1000)\n        }\n    },\n};\n\n\n(function ($) {\n    if (!$.acooly) {\n        $.extend({acooly: {}});\n    }\n\n    $.extend($.acooly, {\n        portal: acooly_portal\n    });\n\n    $.extend($.acooly, {\n        password: acooly_password\n    });\n\n    $.extend($.acooly, {\n        countdown: acooly_countdown\n    });\n\n\n    $.fn.serializeJson = function () {\n        var serializeObj = {};\n        var array = this.serializeArray();\n        var str = this.serialize();\n        $(array).each(function () {\n            if (serializeObj[this.name]) {\n                if ($.isArray(serializeObj[this.name])) {\n                    serializeObj[this.name].push(this.value);\n                } else {\n                    serializeObj[this.name] = [serializeObj[this.name], this.value];\n                }\n            } else {\n                serializeObj[this.name] = this.value;\n            }\n        });\n        return serializeObj;\n    };\n\n})(jQuery);\n\n\n\n\n//# sourceURL=webpack:///./src/js/acooly.portal.js?");

/***/ }),

/***/ "./src/js/acooly.portal.weui.js":
/*!**************************************!*\
  !*** ./src/js/acooly.portal.weui.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/***\n * 封装常规的提示操作\n * 本文件是weui实现。\n * PS: javascript没有接口和实现的概念，只有通过人工保证接口一致，不通框架不同实现，然后通过import引用实现切换\n * @type {{alert: acooly_weui.alert, msg: acooly_weui.msg, confirm: acooly_weui.confirm, prompt: acooly_weui.prompt, loading: acooly_weui.loading, loaded: acooly_weui.loaded, disable: acooly_weui.disable, enable: acooly_weui.enable, toptip: acooly_weui.toptip, toast: acooly_weui.toast, _buildOptions: (function(*=, *=, *=, *=, *=, *=): {text: *})}}\n */\n\nacooly_weui = {\n    alert: function (msg, title, onOK) {\n        $.alert(this._buildOptions(msg, title, onOK));\n    },\n\n    msg: function (msg, title) {\n        this.alert(msg, title);\n    },\n\n    confirm: function (msg, title, onOK, onCancel) {\n        $.confirm(this._buildOptions(msg, title, onOK, onCancel));\n    },\n\n    prompt: function (msg, title, defaultValue, empty, onOK, onCancel) {\n        $.prompt(this._buildOptions(msg, title, defaultValue, empty, onOK, onCancel));\n    },\n\n    loading: function (msg) {\n        if (!msg)\n            msg = '加载中…';\n        $.showLoading(msg);\n    },\n\n    loaded: function (msg) {\n        $.hideLoading();\n    },\n\n    disable: function (id) {\n        $(\"#\" + id).prop('disabled', true).addClass(\"weui_btn_disabled\");\n    },\n\n    enable: function (id) {\n        $(\"#\" + id).prop('disabled', false).removeClass(\"weui_btn_disabled\");\n    },\n\n    /**\n     * @param message\n     * @param type success,error,warning\n     */\n    toptip: function (message, type) {\n        if (!type) type = 'error';\n        $.toptip(message, type);\n    },\n\n    //type: success,cancel,forbidden,text,或则时间\n    //$.toast.prototype.defaults.duration\n    toast: function (message, type, callBack) {\n        if (!type) type = \"text\";\n        if (callBack) {\n            $.toast(message, type, callBack);\n        } else {\n            $.toast(message, type);\n        }\n    },\n\n\n    _buildOptions: function (msg, title, defaultValue, empty, onOK, onCancel) {\n        var options = {text: msg};\n        if (title) {\n            options.title = title;\n        }\n        if (defaultValue) {\n            options.input = defaultValue;\n        }\n        if (empty) {\n            options.empty = empty;\n        }\n        if (onOK) {\n            options.onOK = onOK;\n        }\n        if (onCancel) {\n            options.onCancel = onCancel;\n        }\n        return options;\n    }\n};\n\n$.extend($.acooly, acooly_weui);\n\n\n\n\n\n\n\n\n//# sourceURL=webpack:///./src/js/acooly.portal.weui.js?");

/***/ }),

/***/ "./src/js/acooly.verify.js":
/*!*********************************!*\
  !*** ./src/js/acooly.verify.js ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/**\n * acooly verify\n */\nvar acooly_verify = {\n\n    regExp: function (value, pattern) {\n        var re = new RegExp(pattern);\n        var result = re.test(value);\n        return re.test(value);\n    },\n\n    byteLength: function (value, minlen, maxlen) {\n        if (value == null) {\n            return false;\n        }\n        var l = value.length, blen = 0;\n        for (i = 0; i < l; i++) {\n            if ((value.charCodeAt(i) & 65280) != 0) {\n                blen++;\n            }\n            blen++;\n        }\n        return !(blen > maxlen || blen < minlen);\n    },\n\n    cert: function (value) {\n        //(15位)\n        isIDCard1 = /^[1-9]\\d{7}((0\\d)|(1[0-2]))(([0|1|2]\\d)|3[0-1])\\d{3}$/;\n        //(18位)\n        isIDCard2 = /^[1-9]\\d{5}[1-9]\\d{3}((0\\d)|(1[0-2]))(([0|1|2]\\d)|3[0-1])((\\d{4})|\\d{3}[A-Z])$/;\n        return isIDCard1.test(value) || isIDCard2.test(value);\n    },\n\n    phone: function (value) {\n        return this.regExp(value, \"(^0\\\\d{2}-?\\\\d{8}$)|(^0\\\\d{3}-?\\\\d{7}$)|(^0\\\\d2-?\\\\d{8}$)|(^0\\\\d3-?\\\\d{7}$)\");\n    },\n\n    mobile: function (value) {\n        var reg = /^1[2|3|4|5|6|7|8|9]\\d{9}$/;\n        return reg.test(value);\n    },\n\n    account: function (value) {\n        return !/^[a-zA-Z][\\w]+$/.test(value);\n    },\n\n    chs: function (value) {\n        return /^[\\u0391-\\uFFE5]+$/.test(value);\n    },\n\n    csv: function (value) {\n        return /^[\\w,\\$,\\{,\\},_,\\u4e00-\\u9fa5]+(,[\\w,\\$,\\{,\\},_,\\u4e00-\\u9fa5]+)*$/.test(value)\n    },\n    money: function (value) {\n        return /^-?(([1-9]\\d{0,9})|0)(\\.\\d{1,2})?$/.test(value);\n    }\n};\n\n\n(function ($) {\n    if (!$.acooly) {\n        $.extend({acooly: {}});\n    }\n\n    $.extend($.acooly, {\n        verify: acooly_verify\n    });\n\n})(jQuery);\n\n\n//# sourceURL=webpack:///./src/js/acooly.verify.js?");

/***/ }),

/***/ 0:
/*!*************************************************************************************************************************************************************************!*\
  !*** multi ./src/js/acooly.portal.js ./src/js/acooly.portal.weui.js ./src/js/acooly.format.js ./src/js/acooly.verify.js ./src/js/acooly.form.js ./src/js/acooly.app.js ***!
  \*************************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("__webpack_require__(/*! ./src/js/acooly.portal.js */\"./src/js/acooly.portal.js\");\n__webpack_require__(/*! ./src/js/acooly.portal.weui.js */\"./src/js/acooly.portal.weui.js\");\n__webpack_require__(/*! ./src/js/acooly.format.js */\"./src/js/acooly.format.js\");\n__webpack_require__(/*! ./src/js/acooly.verify.js */\"./src/js/acooly.verify.js\");\n__webpack_require__(/*! ./src/js/acooly.form.js */\"./src/js/acooly.form.js\");\nmodule.exports = __webpack_require__(/*! ./src/js/acooly.app.js */\"./src/js/acooly.app.js\");\n\n\n//# sourceURL=webpack:///multi_./src/js/acooly.portal.js_./src/js/acooly.portal.weui.js_./src/js/acooly.format.js_./src/js/acooly.verify.js_./src/js/acooly.form.js_./src/js/acooly.app.js?");

/***/ })

/******/ });